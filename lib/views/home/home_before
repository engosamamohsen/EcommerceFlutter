          return Container(
              padding: const EdgeInsets.all(8),
              child: state is HomeLoadingState
                  ? const LoadingViewFull()
                  : homeModel != null
                      ? BlocBuilder<ProductCubit, ProductStates>(
                          builder: (context, productState) {
                          return SingleChildScrollView(
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                HomeBar(),
                                const SizedBox(height: 30),
                                SliderView(slider: homeModel!.banners),
                                const SizedBox(height: 30),
                                Row(
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceBetween,
                                  children: [
                                    TextGlobal(
                                      text: S.of(context).categories,
                                      color: Colors.black,
                                      fontSize: 16,
                                      fontWeight: FontWeight.bold,
                                    ),
                                    TextButton(
                                      style: TextButton.styleFrom(
                                        overlayColor: TColor.primary,
                                      ),
                                      onPressed: () {
                                        BlocProvider.of<BottomNavigationCubit>(
                                                context)
                                            .updateTabIndex(CategoriesView());
                                      },
                                      child: TextGlobal(
                                        fontWeight: FontWeight.bold,
                                        text: S.of(context).see_all,
                                        fontSize: 14,
                                        color: TColor.primary,
                                      ),
                                    ),
                                  ],
                                ),
                                HomeCategories(
                                    categories: homeModel!.categories),
                                const SizedBox(height: 10),
                                HomeCategoryProduct(
                                  title: S.of(context).flash_sale,
                                  products: homeModel!.flashSale.products,
                                  productStates: productStates,
                                  productIdFav: productIdFav,
                                  submitFavourite: (productId) {
                                    productIdFav = productId;

                                    BlocProvider.of<ProductCubit>(context)
                                        .addToFavourite(productId);
                                  },
                                ),
                                const SizedBox(height: 10),
                                HomeCategoryProduct(
                                    title: S.of(context).newest_products,
                                    products: homeModel!.newestProduct,
                                    productStates: productStates,
                                    productIdFav: productIdFav,
                                    submitFavourite: (productId) {
                                      productIdFav = productId;
                                      BlocProvider.of<ProductCubit>(context)
                                          .addToFavourite(productId);
                                    }),
                                const SizedBox(height: 10),
                                HomeCategoryProduct(
                                    title: S.of(context).most_sale,
                                    products: homeModel!.mostSale,
                                    productStates: productStates,
                                    productIdFav: productIdFav,
                                    submitFavourite: (productId) {
                                      productIdFav = productId;

                                      BlocProvider.of<ProductCubit>(context)
                                          .addToFavourite(productId);
                                    }),
                              ],
                            ),
                          );
                        })
                      : NetworkError());
